---
- name: Check if URLs return HTTP 200 (Clean Version)
  hosts: localhost
  gather_facts: false
  vars_files:
    - hosts.yaml  # Load file with URLs (urls: [url1, url2, ...])

  vars:
    delay_between_retries: 5    # Delay between retries (seconds)
    max_retries: 3              # Number of retries per URL

  tasks:
    - name: Initialize result_list
      set_fact:
        result_list: []

    - name: Loop through each URL and check status
      block:
        # Task 1: Perform HTTP check
        - name: Perform HTTP check on URL
          uri:
            url: "{{ item }}"
            method: GET
            return_content: no
            status_code: 200
            timeout: 10
          register: single_url_result
          retries: "{{ max_retries }}"
          delay: "{{ delay_between_retries }}"
          until: single_url_result.status == 200
          failed_when: single_url_result.status != 200
          ignore_errors: yes

        # Task 2: Save URL result (Success or Failed) to result_list
        - name: Append result to result_list
          set_fact:
            result_list: "{{ result_list + [ { 'url': item, 'status': ( 'SUCCESS' if single_url_result.status == 200 else 'FAILED' ) } ] }}"

        # Task 3: Print result for current URL
        - name: Print result for URL
          debug:
            msg: >
              URL: {{ item }} -
              Status: {{ result_list[-1].status }} # Last item added
      loop: "{{ urls }}"
      loop_control:
        label: "{{ item }}"

    # Print all results at the end
    - name: Print summary of all URL checks
      debug:
        msg: |
          Health Check Summary:
          {% for entry in result_list %}
          - {{ entry.url }} : {{ entry.status }}
          {% endfor %}

    # Fail play if any URL failed
    - name: Fail the play if any URL check failed
      fail:
        msg: "One or more URLs failed the health check."
      when: result_list | selectattr('status', 'equalto', 'FAILED') | list | length > 0